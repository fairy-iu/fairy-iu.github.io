[{"title":"前端开发网站","date":"2021-04-23T09:22:52.000Z","url":"/2021/04/23/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%BD%91%E7%AB%99/","categories":[["undefined",""]],"content":"一、搜索技巧建议学习一下这个搜索技巧。 搜索技巧： 只是知道搜解决问题的方法这是最基础的，遇到问题才会去想办法解决，而作为一名积极进取的程序员应该随时跟着时代的潮流走，不断的拓展自己的知识面，这样你会发现你遇到问题的时候大部分情况你都能准确定位问题的原因，在哪里去搜解决方案，或者你早就自学过了，分分钟解决。 二、接下来笔者与大家分享一下我个人积累的网站：1.基础学习类网站 MDN开发者文档： 菜鸟教程： W3CSchool： JavaScript教程网： 谷歌开发者工具教程： Linux整体学习： 渐进式web应用程序核对表： 开发者中心：  CSS参考笔记： Bootstrap官网： CSS优质内容网站： CSS 优质内容网站： HTML 优质内容网站： JS 优质内容： 移动端 Web 开发： 人工智能学习地址：人工智能社区 2.开发文档类网站 上传文件转进制的formData:  art-template模板引擎： ejs模板引擎： ES6入门（阮一峰大佬的）： React官网： Redux官网： React Router： Vue官网： NodeJS官网： React Native:  uni-app： Mui:  Taro:  微信小程序开发者平台： 微信开发者平台：  钉钉开发者平台:  百度地图开发者平台： DvaJS： jQuery官网： jQuery API中文文档【在线手册】： ZeptoJS官网： cheerioJS安装地址： RequireJS官网： Sass官网（CSS预处理器，通过编程的方式来开发CSS）： Less官网（同上）： Less中文官网： Socket通信： JSONPlaceholder： 前端开发者手册【gitbook】： gitbook：  各种语言的书： 各种书籍： 各种书籍文章： 3.解决开发难点类网站【各种库，插件，开源网站介绍】 npm官网： npm模块管理器介绍: 让代码提交的时候先执行一次代码，如果有报错不让提交：www.npmjs.com/package/eslint-config-airbnb 验证正则表达式的可视化工具： 开源、免费、企业级CMS系统： ECharts： HighCharts： 富文本编辑器wangEditor：  富文本编辑器UEditor：  蚂蚁数据可视化： 热力图插件： 视频监控直播的插件VLC： 直播软件开发： 网易云信： 聊天开放软件： 有道翻译API： 游戏开发： AI接口： babel（将ES6代码转为ES5代码）： 处理时间与日期的JS库： Lodash： 你可能不需要jQuery： 云小蜜智能机器人API： 易万维源接口： 短信验证码接口： 榛子短信验证码接口：  草料二维码生成器： 二维码 RAP2假数据接口： 可扒的真实电商数据： 易文档接口： - - 感谢旅行呱大佬帮助我们丰富资源，他的CSDN主页为： 免费接口： 假数据接口（测试用）： jQuery插件库： 轮播图插件： 放大镜插件： 响应式瀑布流插件： 百度前端技术学院 — 前端开发项目库： 项目中常用插件： 滚动懒加载的better-scroll： css rest： 4.想要实现快速开发不可不知的 一行代码搞定bug监控： web开发人员必备工具包（实现快速敲代码）: VScode快捷键介绍： 编辑器使用技巧： 前端开源项目CDN： 模板之家解析网站【把模板的url放到这个网站的输入框里即可（还算很便宜的收费）】： 5.各种功能网站 阿里巴巴图标库： UI颜色布料： UI必备颜色表（色块+色码）: logo在线制作，有很多： 造字工坊： 免费设计图，有很多： 图片试别转换各种格式，有很多，只列举了一个: 图片压缩： 图片格式转换： 小表情的emoji： chrome网上商店： SEO综合查询： 谷歌开发者工具箱： 直播平台网址备份： 6.在线工具 在线开发工具： 在线编辑器： 在线做图【ProcessOn 支持流程图、思维导图、原型图、UML、网络拓扑图、组织结构图】： 在线存放图片的地址： 代码变漂亮图片： 7.开发人员应知技术 项目部署流程： 网站SEO：  前端开发必备JS功能函数总结（上）： 前端开发必备JS功能函数总结（下）： Postman测试前端请求后端接口： 函数式编程： 8.前端UI组件库 MintUI： ElementUI： iViewUI： Layui： cubeUI： Antd： MUI： Animate.CSS: 9.刷题 力扣JS题库： 刷算法题: Web 开发练习题： 10.代码托管平台 coding代码托管平台： 码云代码托管平台： github代码托管平台： SVN代码托管平台： SVN代码托管中心： git官网： 阿里云： 腾讯云： 11.社区类 码神岛：  掘金网： 思否： 知乎： stack Overflow： v2ex社区： CtoLib码库：  牛客网： FCC中文网： web开发互助网： 12.项目合作 禅道： 蓝湖（ps切图）： 13.新闻资讯类 FCC 的 Medium 频道： React 新闻订阅： 社区： 节点周刊: 前端焦点: JavaScript周刊: infoQ: 14.书籍类 开发文档：由于部分原因，此模块大部分内容已被舍弃，望读者们见谅 15.学习网站 妙味课堂： 慕课网： 网易云课堂： 中国大学MOOC： tutorialspoint： html中文网： hCoder： 扣丁学堂： 开课吧：  书栈网： 16.应聘网站 拉勾网： Boss直聘： 猎聘网： 智联招聘： 一早一晚（国内远程工程师招聘）： 17.休闲网站 星辰影院： 80s手机电影： 达达兔影院： 日本影视： 蛋蛋赞咨询与影院： 独播库： 哔哩哔哩： 臭豆腐电影： 18.extra 接项目接私活的网站总结： 前端面试题一到三年：  前端面试题三到五年： 资源数据： 99藏书网【非IT行业图书】： 投资界新闻： CSDN吴小迪的博客： 三、遇到问题的解决办法 作为一名前端开发者（所有程序员）最起码遇到bug就算不会解决也应该会搜解决问题的答案。 一般笔者会先在百度搜（关键词一定要输入正确） 如果没搜到会再去bing里面看看 还没有的话就去github的Issues里面再看看 如果还不行就只能自己去看官方文档然后自己研究了。 "},{"title":"vuex刷新保存状态、登录状态保存","date":"2021-04-23T08:58:37.000Z","url":"/2021/04/23/vuex%E5%88%B7%E6%96%B0%E4%BF%9D%E5%AD%98%E7%8A%B6%E6%80%81%E3%80%81%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81%E4%BF%9D%E5%AD%98/","categories":[["undefined",""]],"content":"1、页面权限控制这个常见做法是，在路由跳转的时候做判断，通过router钩子函数判断页面是否需要登录首先在router配置 meta属性 然后在钩子函数里面判断 to.meta.requireAuth为true就跳去登录页面登录，否则就直接到要访问的页面 2、vuex页面F5刷新后维持刷新前的状态不变首先在store的index.js中，state，增加页面要保存的变量，并且将它们的值和sessionStorage里面的绑定 然后再新增mutations，这是将变量写入sessionStorage的方法 接着就可以在登录函数中这样调用，登录成功后将需要的变量写进sessionStorage 在路由的钩子函数里面可以这样将变量取回来，那样页面刷新后，也能将刷新前的状态保持 3、登录状态保存我们在网页中，常常有一个功能，就是像下图那样，勾选后几天内免登录，也就是记住登录状态这个较上面的功能有一个不一样的地方就是，上面的刷新，假如我是登录状态，我将浏览器关闭之后再打开，再打开浏览器，我还是需要登录的那如果我勾选了几天内免登录，登录后没有退出，然后把浏览器关闭了，再重新打开，是不需要登录的，这个功能怎么实现呢?这就要用到localStorage来实现了 首先，一样需要在store的index.js中，state，增加页面要保存的变量，并且将它们的值和localStorage里面的绑定 然后再新增mutations，这是将变量写入localStorage的方法 需要一个自动登录的方法，如果是勾选了就为true，然后就会将需要用到的变量写到localStorage 当然还有登出的 接着就可以在登录函数中，根据有没有勾选自动登录来判断，是不是在登录成功后将需要的变量写进localStorage 最后在路由的钩子函数里面做相应的处理是不是需要登录，然后有没有勾选自动登录，根据布尔值来进行不同的路由操作，然后需要用到的变量操作其实和上面保持页面刷新后的是大同小异的当然这里还需要一个后台的校验接口，就是在勾选了自动登录后，如果是10天期限，那就要在进入true 的分支后再请求后台去校验token是否过期，如果过期就要重新登录了，否则就一切照常 "},{"title":"My First Artical","date":"2021-04-22T15:31:25.000Z","url":"/2021/04/22/My-First-Artical/","categories":[["undefined",""]]},{"title":"Hello World","date":"2021-04-22T14:37:24.043Z","url":"/2021/04/22/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]